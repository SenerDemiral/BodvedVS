@inherits LayoutComponentBase
@inject IAllUsrs AllUsrs

<div class="sener">
	<div class="wrapper">
		<div class="header">
			<div class="navbar">
				@if (usrTkn.StartsWith('g'))
				{
					<NavMenu usrTkn="@usrTkn" />
				}
				else
				{
					<NavMenu usrTkn="@usrTkn" @rendermode="new InteractiveServerRenderMode(prerender: false)" />
				}
			</div>
		</div>
		<div class="content">
			@Body
		</div>
	</div>

</div>

<div id="blazor-error-ui">
	An unhandled error has occurred.
	<a href="" class="reload">Reload</a>
	<a class="dismiss">🗙</a>
</div>


@code
{
	[CascadingParameter] public HttpContext? context { get; set; }
	[CascadingParameter] public required Usr Usr { get; set; }
	private string? usrTkn { get; set; }
	private UsrInf usrInf;

	protected override void OnInitialized()
	{
		usrTkn = context?.Request.Cookies["bodved"];

		if (usrTkn == null)
		{
			usrTkn = "g" + Guid.NewGuid().ToString("N"); // Guest
			CookieOptions co = new CookieOptions();
			co.Secure = false;
			co.HttpOnly = true;
			co.SameSite = SameSiteMode.Strict;
			//co.MaxAge = TimeSpan.FromHours(1);	// Bitis suresi belirtilmediginde sessionCookie oluyor
			context.Response.Cookies.Append("bodved", usrTkn, co);

		}
		usrInf = AllUsrs.TryGetUsr(usrTkn);

		Usr.Ad = usrInf.Ad;
		Usr.IsAdm = usrInf.IsAdm;
		Usr.IsTnm = usrInf.IsTnm;
		Usr.IsSnc = usrInf.IsSnc;
		Usr.Id = usrInf.Id;
	}
}
