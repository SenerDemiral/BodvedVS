@inject IScopedContainer ScpC
@inject ProtectedLocalStorage PLS
@inject IDataAccess db
@rendermode renderMode
@inject NavigationManager Navigation
@* @attribute [StreamRendering(true)] *@
@page "/InpLig"

@* Lig girisleri ben yapacagim *@

@* <LoginAuto /> *@

<h3 style="background-color:gold">Son Sezon Turnuvaları</h3>

@if (ls != null)
{

    <table class="table-edit">
        <tr>
            <td colspan="4">
                <a href="InpRnkSzn">Oyuncu Başlangıç Rank</a>
            </td>
        </tr>
        @foreach (var r in ls)
        {
            <tr>
                <td class="text-center">@r.CCId</td>
                <td>@r.Ad</td>
                <td>
                    <a href="InpTkm/@r.CCId/@r.Ad">🏁</a>
                </td>
                <td>
                    <a href="InpFks/@r.CCId/@r.Ad">⏰</a>
                </td>
                <td>
                    <a href="">Deneme</a>
                </td>
            </tr>
        }
    </table>
}
else
{
    <div>...</div>
}

@code {
    static IComponentRenderMode renderMode = new InteractiveServerRenderMode(prerender: false);
    IEnumerable<LS>? ls;

    protected override async Task OnInitializedAsync()
    {
        if (ScpC.IsOk)
            LoadData();
//        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            //await Task.Delay(1);    // LoginAuto ya gider, orada bekledigi icin buraya doner
            //await Task.Delay(10);    // Burada bekledigi icin LoginAuto ya gider
            
            // if (ScpC.IsOk)
            //      LoadData();
        }
    }

    private void LoadData()
    {
        ls = db.LoadData<LS, dynamic>("select CCId,Ad from UI_LIG_SZN(0)", new { });
        StateHasChanged();
    }

    private sealed class LS
    {
        public int CCId { get; set; }
        public string Ad { get; set; }
    }

}
